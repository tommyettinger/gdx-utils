allprojects {
	ext {
		javaVersion = 1.7
		libgdxVersion = "1.0.1-SNAPSHOT"
		libVersion = 227
		libName = "libgdx-utils"
		libManifestAttributes = [
			"web": "http://dermetfan.net/",
			"repository": "http://bitbucket.org/dermetfan/libgdx-utils",
			"version": libVersion
		]
		displayName = libName + (project != rootProject ? "-$project.name" : "")
	}
	
	repositories {
		mavenLocal()
		mavenCentral()
		maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
	}
	
	apply plugin: "java"
	apply plugin: "eclipse"
	apply plugin: "announce"
	
	dependencies {
		testCompile "junit:junit:+"
	}
	
	// java
	
	sourceSets {
		main {
			java.srcDir "src/main"
			resources.srcDir "src/main"
		}
		test.java.srcDir "src/test"
	}
	
	sourceCompatibility = javaVersion
	
	jar {
		baseName = displayName
		manifest.attributes += libManifestAttributes
	}

	javadoc {
		title = displayName
		options {
			memberLevel = JavadocMemberLevel.PACKAGE
			author true
			setUse true
		}
	}

	// eclipse

	eclipse {
		project.name = displayName
		classpath.containers = ["org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-$javaVersion"]
	}
	
	// distribution
	
	task distSources(type: Jar) {
		description = "Assembles a jar archive containing the main sources and resources."
		from sourceSets.main.java
		from sourceSets.main.resources
		baseName = displayName
		appendix = "sources"
		destinationDir = jar.destinationDir
		manifest.attributes += libManifestAttributes
		doLast { announce.local.send(displayName, "v$libVersion sources distributed") }
	}
	
	task distJavadoc(type: Jar, dependsOn: javadoc) {
		description = "Assembles a jar archive containing the javadoc."
		from javadoc.destinationDir
		baseName = displayName
		appendix = "javadoc"
		destinationDir = jar.destinationDir
		manifest.attributes += libManifestAttributes
		doLast { announce.local.send(displayName, "v$libVersion javadoc distributed") }
	}
	
	task dist(type: Zip, dependsOn: [build, distSources, distJavadoc]) {
		description = "Assembles a zip archive containing the binary, source and javadoc jar archives as well as the LICENSE and RELEASE NOTES files."
		from distSources.destinationDir
		from distJavadoc.destinationDir
		from "$rootDir/LICENSE"
		from "$rootDir/RELEASE NOTES"
		destinationDir = temporaryDir
		baseName = displayName
		doLast {
			archivePath.renameTo("$jar.destinationDir.path/$archiveName")
			announce.local.send(displayName, "v$libVersion distributed")
		}
	}
	
	dist.group = distJavadoc.group = distSources.group = "distribution"
}

dependencies {
	compile "com.badlogicgames.gdx:gdx:$libgdxVersion"
}

project(":box2d") {
	dependencies {
		compile project(":")
		compile "com.badlogicgames.gdx:gdx-box2d:$libgdxVersion"
	}
}